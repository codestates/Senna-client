UI 선언에 집중
- 재사용률 높아짐


import { createStore } from 'redux';

// 상태의 초기값 설정
const initalState = {
  counter : 0,
  text: '',
  list: []
};

// 액션타입 설정
const INCREASE = 'INCREASE';
const DECREASE = 'DECREASE';
const CHANGE_TEXT = 'CHANGE_TEXT';
const ADD_TO_LIST = 'ADD_TO_LIST';

const increase = () => ({
  type: INCREASE
})
const decrease = () => ({
  type: DECREASE
})
const changeText = text => (
  {
    type:CHANGE_TEXT,
    text
  }
)

const addToList = item => (
  {
    type:ADD_TO_LIST,
    item
  }
)

// 리듀서 설정            // 초기 상태값 설정
function reducer(state = initalState, action) {
  switch (action.type){
    case INCREASE:
      return {
        ...state,
        counter: state.count+1,
      };
    case DECREASE:
      return {
        ...state,
        counter: state.count-1,
      };
    case CHANGE_TEXT:
      return {
        ...state,
        counter: action.text,
      };
    case ADD_TO_LIST:
      return {
        ...state,
        counter: state.list.concat(action.item)
      };
    default:
        return state;
  }
}

// 스토어 만들기
const store = createStore(reducer);
// 현재 스토어에 있는 상태를 조회
console.log(store.getState())

// 구독을 위한 리스터 함수만들기
const listener = () => {
  const state = store.getState();
  console.log(state)
}

const unsubscribe = store.subscribe(listener);
